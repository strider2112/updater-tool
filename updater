#!/bin/bash

# This code is required to resolve symbolic links to the real path of the script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
if [ "$DIR" = "/usr/local/bin" ]; then
        DATAPATH="/usr/local/share/updater-tool"
else
        DATAPATH="$DIR"
fi

updateFile="$DATAPATH/data/updates.txt"
updateChecker="$DIR/check-for-updates"

quit() {
	printf "\nDone, thank you for using Updater\n\n"
	exit 1
}

autoremoveFunction() {
	printf "\nUpdate complete, there may be leftover files, do you want to run autoremove?"
	read -p " (y/n) " input
	case $input in
		"y" | "Y" | "Yes" | "YES" | "yes")
			printf "\nRunning \033[01;32msudo apt autoremove\n\033[00m"
			sudo apt autoremove
			;;
		"n" | "N" | "No" | "NO" | "no")
			quit
	                ;;
	         *)
	                printf "\nInvalid entry. Assuming 'n'"
			quit
	                ;;
	esac
}

updateFunction() {
	printf "\nRunning \033[01;32msudo apt update\n\033[00m"
	sudo apt update
	read -p "Continue? (y/n) " input
	case $input in
		"y" | "Y" | "Yes" | "YES" | "yes")
			printf "\nRunning \033[01;32msudo apt upgrade\n\033[00m"
			if sudo apt upgrade; then
				$updateChecker
			fi
			autoremoveFunction
			;;
		"n" | "N" | "No" | "NO" | "no")
			quit
			;;
		*)
			printf "\nInvalid entry. Assuming 'n'"
			quit
			;;
	esac
}

main() {
	if ! sed '1q;d' "$updateFile"; then
		echo "Could not open file, did you run setup.sh?"
	else
		sed '2q;d' "$updateFile"
	fi

	printf "\nDo you want to continue with the update? "
	read -p "(y/n) " input
	case $input in
		"y" | "Y" | "Yes" | "YES" | "yes")
			printf "\nThis operation will ask for your password.\n"
			updateFunction
			;;
		"n" | "N" | "No" | "NO" | "no")
			quit
			;;
		*)
			printf "\nInvalid entry. Assuming 'n'"
			quit
			;;
	esac
	quit
}

main
